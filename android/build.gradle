group 'com.klippa.scanner.klippa_scanner_sdk'
version '1.0-SNAPSHOT'

def DEFAULT_COMPILE_SDK_VERSION = 33
def DEFAULT_BUILD_TOOLS_VERSION = '30.0.3'
def DEFAULT_MIN_SDK_VERSION = 21
def DEFAULT_TARGET_SDK_VERSION = 33

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}


buildscript {
    ext.kotlin_version = '1.6.10'
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

rootProject.allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        maven {
            credentials {
                username System.getenv()['KLIPPA_SCANNER_SDK_USERNAME'] ? System.getenv()['KLIPPA_SCANNER_SDK_USERNAME'] : (keystoreProperties["klippa.scanner.sdk.username"] ? keystoreProperties["klippa.scanner.sdk.username"] : '')
                password System.getenv()['KLIPPA_SCANNER_SDK_PASSWORD'] ? System.getenv()['KLIPPA_SCANNER_SDK_PASSWORD'] : (keystoreProperties["klippa.scanner.sdk.password"] ? keystoreProperties["klippa.scanner.sdk.password"] : '')
            }
            url System.getenv()['KLIPPA_SCANNER_SDK_URL'] ? System.getenv()['KLIPPA_SCANNER_SDK_URL'] : (keystoreProperties["klippa.scanner.sdk.url"] ? keystoreProperties["klippa.scanner.sdk.url"] : 'https://custom-ocr.klippa.com/sdk/android/maven')
        }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion safeExtGet('compileSdkVersion', DEFAULT_COMPILE_SDK_VERSION)
    buildToolsVersion safeExtGet('buildToolsVersion', DEFAULT_BUILD_TOOLS_VERSION)

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', DEFAULT_MIN_SDK_VERSION)
        targetSdkVersion safeExtGet('targetSdkVersion', DEFAULT_TARGET_SDK_VERSION)
    }
    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    def fallbackKlippaScannerVersion = "3.1.4"
    def klippaScannerVersion = project.hasProperty('klippaScannerVersion') ? project.klippaScannerVersion : fallbackKlippaScannerVersion
    implementation "com.klippa:scanner:$klippaScannerVersion"
    implementation 'com.google.android.material:material:1.6.1'
}
